// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[3..5], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    RAM8(in=in, load=a, address=address[0..2], out=i);
    RAM8(in=in, load=b, address=address[0..2], out=j);
    RAM8(in=in, load=c, address=address[0..2], out=k);
    RAM8(in=in, load=d, address=address[0..2], out=l);
    RAM8(in=in, load=e, address=address[0..2], out=m);
    RAM8(in=in, load=f, address=address[0..2], out=n);
    RAM8(in=in, load=g, address=address[0..2], out=o);
    RAM8(in=in, load=h, address=address[0..2], out=p);
    Mux8Way16(a=i, b=j, c=k, d=l, e=m, f=n, g=o, h=p, sel=address[3..5], out=out);
}

// address 0-07   |  000000 —> 000111
// address 07-15  |  001000 —> 001111
// address 16-23  |  010000 —> 010111
// address 23-31  |  011000 —> 011111
// address 32-39  |  100000 —> 011111
// address 40-47  |  101000 —> 101111
// address 48-55  |  110000 —> 110111
// address 56-63  |  111000 —> 111111
//  

// 000
// 001
// 010
// 011
// 100
// 101
// 110
// 111
