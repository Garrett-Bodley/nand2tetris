// Label
(SimpleFunction.SimpleFunction.test)
// Push Constant
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push Constant
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
// Push from segment: local
@LCL
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
// Push from segment: local
@LCL
A=M
D=A
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M+D
@SP
A=M-1
M=!M
// Push from segment: argument
@ARG
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M+D
// Push from segment: argument
@ARG
A=M
D=A
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=M-D
@LCL
D=M
@14
M=D
// Saving the return address!
@LCL
D=M
@5
A=D-A
D=M
@15
M=D
// Pop to segment: argument
@ARG
D=M
@13
M=D
@SP
AM=M-1
D=M
@13
A=M
M=D
@ARG
D=M+1
@SP
M=D
@14
D=M
@1
D=D-A
@THAT
M=D
@14
D=M
@2
D=D-A
@THIS
M=D
@14
D=M
@3
D=D-A
@ARG
M=D
@14
D=M
@4
D=D-A
@LCL
M=D
// Going To the Return Address!
@15
D=M
0;JMP
(INFINITE_LOOP)
@INFINITE_LOOP
0; JMP
