// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
  static Array twoToThe;

    /** Initializes the library. */
    function void init() {
      let twoToThe = Array.new(16);
      let twoToThe[0] = 1;
      let twoToThe[1] = 2;
      let twoToThe[2] = 4;
      let twoToThe[3] = 8;
      let twoToThe[4] = 16;
      let twoToThe[5] = 32;
      let twoToThe[6] = 64;
      let twoToThe[7] = 128;
      let twoToThe[8] = 256;
      let twoToThe[9] = 512;
      let twoToThe[10] = 1024;
      let twoToThe[11] = 2048;
      let twoToThe[12] = 4096;
      let twoToThe[13] = 8192;
      let twoToThe[14] = 16384;
      let twoToThe[15] = 32767 + 1;
      return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
      if(x < 0){ return -x; }
      return x;
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
      var int j, bit, sign, sum, shiftedX;

      let sum = 0;
      let shiftedX = x;
      let j = 0;
      let bit = 1;

      while(j < 16){
        if((y & bit) = bit){
          let sum = sum + shiftedX;
        }
        let bit = bit + bit;
        let shiftedX = shiftedX + shiftedX;
        let j = j + 1;
      }
        return sum;
    }

    function bool bit(int x, int j){
      if(j > 15){ return false; }
      return ~((x & twoToThe[j]) = 0);
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
      var int sign, res, q;

      let sign = 1;
      if(x < 0){
        let x = -x;
        let sign = -sign;
      }
      if(y < 0){
        let y = -y;
        let sign = -sign;
      }

      if(y > x){ return 0; }
      let q = Math.divide(x, 2 * y);
      if((x - (2 * q * y)) < y){
        let res = 2 * q;
      }else{
       
        let res = (2 * q) + 1;
      }
      return res * sign;
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
      var int j, y, yPlusTwoToTheJ, yplusTwoToTheJSquared;
      // n = 16
      let y = 0;
      let j = (16/2) - 1;
      while(j > -1){
        let yPlusTwoToTheJ = y + twoToThe[j];
        let yplusTwoToTheJSquared = yPlusTwoToTheJ * yPlusTwoToTheJ;
        if( ( ~(yplusTwoToTheJSquared > x) ) & ( yplusTwoToTheJSquared > 0 )){
          let y = yPlusTwoToTheJ;
        }
        let j = j - 1;
      }
      return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
      if(a < b ){return b;}
      return a;
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
      if(a > b){return b;}
      return a;
    }
}
