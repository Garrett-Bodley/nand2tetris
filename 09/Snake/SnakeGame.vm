function SnakeGame.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 1
push constant 21257
call LSFR.new 1
pop this 5
push constant 0
pop this 0
push constant 32
pop this 3
push constant 1
pop this 2
push this 3
push this 2
call Snake.new 2
pop this 6
push pointer 0
return
function SnakeGame.getKeyboardInput 1
call Keyboard.keyPressed 0
pop local 0
push local 0
push constant 81
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
call GameState.setQuit 1
pop temp 0
label IF_FALSE0
push local 0
push constant 131
eq
call Direction.get 0
push constant 2
eq
not
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
call Direction.set 1
pop temp 0
label IF_FALSE1
push local 0
push constant 133
eq
call Direction.get 0
push constant 1
eq
not
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 2
call Direction.set 1
pop temp 0
label IF_FALSE2
push local 0
push constant 130
eq
call Direction.get 0
push constant 4
eq
not
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 3
call Direction.set 1
pop temp 0
label IF_FALSE3
push local 0
push constant 132
eq
call Direction.get 0
push constant 3
eq
not
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 4
call Direction.set 1
pop temp 0
label IF_FALSE4
push constant 0
return
function SnakeGame.dispose 0
push argument 0
pop pointer 0
push this 6
call Snake.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function SnakeGame.run 1
push argument 0
pop pointer 0
push constant 4
call Direction.set 1
pop temp 0
push constant 0
call GameState.setVictory 1
pop temp 0
push constant 0
call GameState.setDeath 1
pop temp 0
push constant 0
call GameState.setQuit 1
pop temp 0
push pointer 0
call SnakeGame.makeFood 1
pop temp 0
label WHILE_EXP0
call GameState.victory 0
not
call GameState.death 0
not
and
call GameState.quit 0
not
and
not
if-goto WHILE_END0
call SnakeGame.getKeyboardInput 0
pop temp 0
push this 0
push constant 5000
call Utils.mod 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call Direction.get 0
call SnakeGame.move 2
pop temp 0
label IF_FALSE0
push this 0
push constant 1
add
pop this 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function SnakeGame.move 2
push argument 0
pop pointer 0
push pointer 0
push argument 1
call SnakeGame.getNewCoordinates 2
pop local 0
push pointer 0
push local 0
call SnakeGame.moveStatusCheck 2
pop local 1
push local 1
call MoveStatus.ate 1
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
call Snake.chopTail 1
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
call SnakeGame.makeFood 1
pop temp 0
label IF_END0
push this 6
push argument 1
push local 0
call Snake.updateHead 3
pop temp 0
push local 1
call MoveStatus.dispose 1
pop temp 0
push constant 0
return
function SnakeGame.growSnake 1
push argument 0
pop pointer 0
push constant 2
push constant 0
call ListNode.new 2
pop local 0
push this 6
push constant 4
push local 0
call Snake.updateHead 3
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 3
push constant 0
call ListNode.new 2
pop local 0
push this 6
push constant 4
push local 0
call Snake.updateHead 3
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 3
push constant 1
call ListNode.new 2
pop local 0
push this 6
push constant 2
push local 0
call Snake.updateHead 3
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 2
push constant 1
call ListNode.new 2
pop local 0
push this 6
push constant 3
push local 0
call Snake.updateHead 3
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 2
push constant 2
call ListNode.new 2
pop local 0
push this 6
push constant 2
push local 0
call Snake.updateHead 3
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 3
push constant 2
call ListNode.new 2
pop local 0
push this 6
push constant 4
push local 0
call Snake.updateHead 3
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 4
push constant 2
call ListNode.new 2
pop local 0
push this 6
push constant 4
push local 0
call Snake.updateHead 3
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 4
push constant 1
call ListNode.new 2
pop local 0
push this 6
push constant 1
push local 0
call Snake.updateHead 3
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 4
push constant 0
call ListNode.new 2
pop local 0
push this 6
push constant 1
push local 0
call Snake.updateHead 3
pop temp 0
push constant 500
call Sys.wait 1
pop temp 0
push constant 5
push constant 0
call ListNode.new 2
pop local 0
push this 6
push constant 4
push local 0
call Snake.updateHead 3
pop temp 0
push constant 0
return
function SnakeGame.getNewCoordinates 2
push argument 0
pop pointer 0
push this 6
call Snake.getHead 1
pop local 1
push local 1
call ListNode.getX 1
push local 1
call ListNode.getY 1
call ListNode.new 2
pop local 0
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push local 0
call ListNode.getY 1
push constant 1
sub
call ListNode.setY 2
pop temp 0
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push local 0
call ListNode.getY 1
push constant 1
add
call ListNode.setY 2
pop temp 0
label IF_FALSE1
push argument 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
push local 0
call ListNode.getX 1
push constant 1
sub
call ListNode.setX 2
pop temp 0
label IF_FALSE2
push argument 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push local 0
call ListNode.getX 1
push constant 1
add
call ListNode.setX 2
pop temp 0
label IF_FALSE3
push local 0
return
function SnakeGame.moveStatusCheck 3
push argument 0
pop pointer 0
push this 6
push argument 1
call Snake.doesInhabit 2
pop local 0
push pointer 0
push argument 1
call SnakeGame.coordsOutOfBounds 2
pop local 1
push pointer 0
push argument 1
call SnakeGame.containsFood 2
pop local 2
push local 0
push local 1
push local 2
call MoveStatus.new 3
return
function SnakeGame.containsFood 0
push argument 0
pop pointer 0
push argument 1
call ListNode.getX 1
push this 4
call ListNode.getX 1
eq
push argument 1
call ListNode.getY 1
push this 4
call ListNode.getY 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function SnakeGame.makeFood 0
push argument 0
pop pointer 0
push pointer 0
call SnakeGame.makeFoodCoords 1
pop this 4
label WHILE_EXP0
push this 6
push this 4
call Snake.doesInhabit 2
not
if-goto WHILE_END0
push pointer 0
call SnakeGame.makeFoodCoords 1
pop this 4
goto WHILE_EXP0
label WHILE_END0
push pointer 0
call SnakeGame.drawFood 1
pop temp 0
push constant 0
return
function SnakeGame.makeFoodCoords 4
push argument 0
pop pointer 0
push this 6
call Snake.getHead 1
pop local 2
push this 5
call LSFR.nextRNG 1
push this 1
add
push local 2
call ListNode.getX 1
sub
push constant 512
push this 3
call Math.divide 2
push constant 1
sub
call Utils.mod 2
pop local 0
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
neg
call Math.multiply 2
pop local 0
label IF_FALSE0
push this 5
call LSFR.nextRNG 1
push local 2
call ListNode.getY 1
add
push this 6
call Snake.getLength 1
sub
push constant 256
push this 3
call Math.divide 2
push constant 1
sub
call Utils.mod 2
pop local 1
push local 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 1
neg
call Math.multiply 2
pop local 1
label IF_FALSE1
push local 0
push local 1
call ListNode.new 2
pop local 3
push this 6
push local 3
call Snake.doesInhabit 2
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 5
call LSFR.nextRNG 1
push this 0
and
push constant 512
push this 3
call Math.divide 2
push constant 1
sub
call Utils.mod 2
pop local 0
push local 0
push constant 0
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push constant 1
neg
call Math.multiply 2
pop local 0
label IF_FALSE3
push this 5
call LSFR.nextRNG 1
push this 6
call Snake.getLength 1
push this 1
call Math.multiply 2
push local 2
call ListNode.getX 1
add
push local 2
call ListNode.getY 1
sub
or
push constant 256
push this 3
call Math.divide 2
push constant 1
sub
call Utils.mod 2
pop local 1
push local 1
push constant 0
lt
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 1
push constant 1
neg
call Math.multiply 2
pop local 1
label IF_FALSE4
push local 3
push local 0
call ListNode.setX 2
pop temp 0
push local 3
push local 1
call ListNode.setY 2
pop temp 0
label IF_FALSE2
push local 3
return
function SnakeGame.drawFood 4
push argument 0
pop pointer 0
push this 4
call ListNode.getX 1
push this 3
call Math.multiply 2
push this 2
add
pop local 0
push this 4
call ListNode.getY 1
push this 3
call Math.multiply 2
push this 2
add
pop local 1
push this 4
call ListNode.getX 1
push constant 1
add
push this 3
call Math.multiply 2
push this 2
sub
pop local 2
push this 4
call ListNode.getY 1
push constant 1
add
push this 3
call Math.multiply 2
push this 2
sub
pop local 3
push local 0
push local 1
push local 2
push local 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function SnakeGame.coordsOutOfBounds 0
push argument 0
pop pointer 0
push argument 1
call ListNode.getX 1
push constant 512
push this 3
call Math.divide 2
push constant 1
sub
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push argument 1
call ListNode.getY 1
push constant 256
push this 3
call Math.divide 2
push constant 1
sub
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push constant 0
return
